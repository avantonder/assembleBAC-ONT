/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]
    
    withName: MERGE_RUNS {
        ext.prefix = { "${meta.id}" }
        publishDir = [
            [
                path: { "${params.outdir}/merged_reads" },
                mode: params.publish_dir_mode,
                pattern: '*.fastq.gz',
                enabled: params.perform_runmerging
            ]
        ]
    }
       
    withName: FASTQC {
        ext.args = '--quiet'
        ext.prefix = { "${meta.id}_raw" }
        publishDir = [
            path: { "${params.outdir}/fastqc/raw" },
            mode: params.publish_dir_mode,
            pattern: '*.{html,zip}'
        ]
    }

    withName: FASTQC_PROCESSED {
        ext.args = '--quiet'
        ext.prefix = { "${meta.id}_processed" }
        publishDir = [
            path: { "${params.outdir}/fastqc/processed" },
            mode: params.publish_dir_mode,
            pattern: '*.{html,zip}'
        ]
    }

    withName: FALCO {
        ext.prefix = { "${meta.id}_raw_falco" }
        publishDir = [
            path: { "${params.outdir}/falco/raw" },
            mode: params.publish_dir_mode,
            pattern: '*.{html,txt,zip}'
        ]
    }

    withName: FALCO_PROCESSED {
        ext.prefix = { "${meta.id}_processed_falco" }
        publishDir = [
            path: { "${params.outdir}/falco/processed" },
            mode: params.publish_dir_mode,
            pattern: '*.{html,txt,zip}'
        ]
    }
    
    

    withName: PORECHOP_PORECHOP {
        ext.prefix = { "${meta.id}_porechop" }
        publishDir = [
            [
                path: { "${params.outdir}/porechop" },
                mode: params.publish_dir_mode,
                pattern: '*_porechop.fastq.gz',
                enabled: params.save_preprocessed_reads
            ],
            [
                path: { "${params.outdir}/porechop" },
                mode: params.publish_dir_mode,
                pattern: '*.log'
            ]
        ]
    }

    withName: PORECHOP_ABI {
        ext.prefix = { "${meta.id}_porechop_abi" }
        publishDir = [
            [
                path: { "${params.outdir}/porechop_abi" },
                mode: params.publish_dir_mode,
                pattern: '*_porechop_abi.fastq.gz',
                enabled: params.save_preprocessed_reads
            ],
            [
                path: { "${params.outdir}/porechop_abi" },
                mode: params.publish_dir_mode,
                pattern: '*.log'
            ]
        ]
    }

    withName: FILTLONG {
        ext.args = [
            "--min_length ${params.longread_qc_qualityfilter_minlength}",
            "--keep_percent ${params.longread_qc_qualityfilter_keeppercent}",
            "--target_bases ${params.longread_qc_qualityfilter_targetbases}"
        ]
        .join(' ').trim()
        ext.prefix = { "${meta.id}_filtered" }
        publishDir = [
            [
                path: { "${params.outdir}/filtlong" },
                mode: params.publish_dir_mode,
                pattern: '*.fastq.gz',
                enabled: params.save_preprocessed_reads
            ],
            [
                path: { "${params.outdir}/filtlong" },
                mode: params.publish_dir_mode,
                pattern: '*.log'
            ]
        ]
    }

    withName: NANOQ {
        ext.args = [
            "-vv",
            "--min-len ${params.longread_qc_qualityfilter_minlength}",
            "--min-qual ${params.longread_qc_qualityfilter_minquality}"
        ]
        .join(' ').trim()
        ext.prefix = { "${meta.id}_filtered" }
        publishDir = [
            [
                path: { "${params.outdir}/nanoq" },
                mode: params.publish_dir_mode,
                pattern: '*_filtered.fastq.gz',
                enabled: params.save_preprocessed_reads
            ],
            [
                path: { "${params.outdir}/nanoq" },
                mode: params.publish_dir_mode,
                pattern: '*_filtered.stats'
            ]
        ]
    }

    withName: '.*:SUB_SAMPLING:MASH_SKETCH' {
        ext.args = '-k 32 -m 3'
        publishDir = [
            path: { "${params.outdir}/mash" },
            mode: params.publish_dir_mode,
            pattern: '*.{mash_stats,msh}'
        ]
    }

    withName: '.*:SUB_SAMPLING:RASUSA' {
        ext.args = '--seed 23032021'
        publishDir = [
            path: { "${params.outdir}/rasusa" },
            mode: params.publish_dir_mode,
            pattern: '*.fastq.gz'
        ]
    }
    
    withName: 'FLYE' {
        publishDir = [
            path: { "${params.outdir}/flye" },
            mode: params.publish_dir_mode,
            pattern: '*.{log,gfa.gz,fasta,txt}'
        ]
    }

    withName: 'FLYE_PARSE' {
        publishDir = [
            path: { "${params.outdir}/metadata" },
            mode: params.publish_dir_mode,
            pattern: '*_stats.tsv'
        ]
    }
    
    withName: 'MEDAKA' {
        //ext.args   = { params.medaka_model ? "-m ${params.medaka_model_base_path}${params.medaka_model}_model.tar.gz" : '' }
        ext.args   = { "-m ${model}" }
        publishDir = [
            path: { "${params.outdir}/medaka" },
            mode: params.publish_dir_mode,
            pattern: '*.fa.gz'
        ]
    }
    
    withName: 'MLST' {
        publishDir = [
            path: { "${params.outdir}/mlst" },
            mode: params.publish_dir_mode,
            pattern: '*.tsv'
        ]
    }

    withName: 'MLST_PARSE' {
        publishDir = [
            path: { "${params.outdir}/metadata" },
            mode: params.publish_dir_mode,
            pattern: '*_summary.tsv'
        ]
    }

    withName: 'BAKTA_BAKTA' {
        ext.args = '--skip-plot'
        publishDir = [
            path: { "${params.outdir}/bakta" },
            mode: params.publish_dir_mode,
            pattern: '*.gff3'
        ]
    }

    withName: 'CHECKM2' {
        publishDir = [
            path: { "${params.outdir}/checkm2" },
            mode: params.publish_dir_mode,
            pattern: '*_quality_report.tsv'
        ]
    }

    withName: 'CHECKM2_PARSE' {
        publishDir = [
            path: { "${params.outdir}/metadata" },
            mode: params.publish_dir_mode,
            pattern: '*_summary.tsv'
        ]
    }

    withName: 'QUAST' {
        publishDir = [
            path: { "${params.outdir}/metadata" },
            mode: params.publish_dir_mode,
            pattern: '*_report.tsv'
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}
